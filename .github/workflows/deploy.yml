name: Deploy Node Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Test build job - runs on both PR and main push
  test-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Validate Environment Variables
        run: |
          if [ -z "${{ secrets.STRIPE_SECRET_KEY }}" ]; then
            echo "Error: STRIPE_SECRET_KEY is not set"
            exit 1
          fi
          if [ -z "${{ secrets.STRIPE_WEBHOOK_SECRET }}" ]; then
            echo "Error: STRIPE_WEBHOOK_SECRET is not set"
            exit 1
          fi
          if [ -z "${{ secrets.STRIPE_PUBLISHABLE_KEY }}" ]; then
            echo "Error: STRIPE_PUBLISHABLE_KEY is not set"
            exit 1
          fi

      - name: Test Docker Build (without push)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: rizz336/needle360-backend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Build and push job - only runs on main branch push
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: test-build
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: rizz336/needle360-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Deploy job - only runs on main branch push after successful build
  deploy:
    needs: build
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Clean Up Docker Environment
        run: |
          docker system prune -af --volumes
          docker image prune -af
          docker builder prune -af
          rm -rf /root/.npm/_cacache || true
          df -h
        continue-on-error: true

      - name: Create or Join Docker Network
        run: docker network create needle360-network || true

      - name: Pull Docker Image
        run: docker pull rizz336/needle360-backend:latest

      - name: Stop and Remove Existing Containers
        run: |
          docker stop needle360-backend-container || true
          docker rm needle360-backend-container || true
          docker stop mongo-container || true
          docker rm mongo-container || true

      - name: Start MongoDB Container
        run: |
          docker run -d \
            --name mongo-container \
            --restart unless-stopped \
            --network needle360-network \
            -v mongodb_data:/data/db \
            mongo:latest

      - name: Wait for MongoDB to be ready
        run: |
          echo "Waiting for MongoDB to be ready..."
          for i in {1..30}; do
            if docker exec mongo-container mongosh --eval "db.adminCommand('ping')" >/dev/null 2>&1; then
              echo "MongoDB is ready"
              break
            fi
            echo "Attempt $i: MongoDB not ready yet"
            sleep 2
          done

      - name: Run Backend Container
        run: |
          docker run -d \
            -p 4000:4000 \
            --name needle360-backend-container \
            --network needle360-network \
            -e MONGO_URI=mongodb://mongo-container:27017/needle360 \
            -e MONGODB_PASSWORD='${{ secrets.MONGODB_PASSWORD }}' \
            -e STRIPE_SECRET_KEY='${{ secrets.STRIPE_SECRET_KEY }}' \
            -e STRIPE_PUBLISHABLE_KEY='${{ secrets.STRIPE_PUBLISHABLE_KEY }}' \
            -e STRIPE_WEBHOOK_SECRET='${{ secrets.STRIPE_WEBHOOK_SECRET }}' \
            -e MAILTRAP_TOKEN='${{ secrets.MAILTRAP_TOKEN }}' \
            -e MAILTRAP_SENDER_EMAIL='${{ secrets.MAILTRAP_SENDER_EMAIL }}' \
            -e MAILTRAP_SENDER_NAME='${{ secrets.MAILTRAP_SENDER_NAME }}' \
            -e PORT=4000 \
            -e CLIENT_URL='https://needle360.online' \
            -e NODE_ENV=production \
            -e JWT_SECRET='${{ secrets.JWT_SECRET }}' \
            -e GOOGLE_CLIENT_ID='${{ secrets.GOOGLE_CLIENT_ID }}' \
            -e GOOGLE_CLIENT_SECRET='${{ secrets.GOOGLE_CLIENT_SECRET }}' \
            -e SESSION_SECRET='${{ secrets.SESSION_SECRET }}' \
            --restart unless-stopped \
            rizz336/needle360-backend:latest

      - name: Wait for backend to be ready
        run: |
          echo "Waiting for backend to be ready..."
          for i in {1..30}; do
            if curl -s -f http://localhost:4000/health || curl -s -f http://localhost:4000 >/dev/null; then
              echo "Backend is ready"
              exit 0
            fi
            echo "Attempt $i: Backend not ready yet"
            docker logs --tail 10 needle360-backend-container
            sleep 5
          done
          echo "Backend did not become ready after 30 attempts"
          docker logs needle360-backend-container
          exit 1
